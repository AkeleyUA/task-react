{"version":3,"sources":["components/tableComponent.js","App.js","serviceWorker.js","index.js"],"names":["TableComponent","props","addCol","cloneCols","state","cols","slice","push","length","setState","delColDisplay","addRow","cloneRows","rows","delRowDisplay","delCol","splice","currentCol","delColTransform","cellSize","delRow","currentRow","delRowTransform","getRef","node","element","showBtns","hideBtns","delButtonMover","event","target","classList","contains","dataset","colIndex","parentNode","rowIndex","containerMover","mousePosition","clientX","clientY","leftMove","left","topMove","top","containerAddListener","containerTableRect","currentTarget","getBoundingClientRect","eventReact","nativeEvent","offsetX","offsetY","addEventListener","containerRemoveListener","removeEventListener","i","initialHeight","initialWidth","className","ref","this","onMouseMove","onMouseEnter","onMouseLeave","style","onMouseDown","onMouseUp","map","row","index","key","data-row-index","col","width","height","data-col-index","onClick","right","bottom","display","transform","React","Component","defaultProps","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3eaf0cb8.chunk.js","sourcesContent":["import React from 'react';\r\nimport './tableComponent.css';\r\n\r\nclass TableComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentCol: 0,\r\n      currentRow: 0,\r\n      cols: [],\r\n      rows: [],\r\n      delColTransform: 'none',\r\n      delRowTransform: 'none'\r\n    }\r\n    for (let i = 0; i < this.props.initialHeight; i++) {\r\n      this.state.rows.push(i);\r\n    }\r\n    for (let i = 0; i < this.props.initialWidth; i++) {\r\n      this.state.cols.push(i);\r\n    }\r\n  }\r\n\r\n  addCol = () => {\r\n    let cloneCols = this.state.cols.slice();\r\n\r\n    cloneCols.push(cloneCols[cloneCols.length - 1] + 1);\r\n    this.setState({ cols: cloneCols });\r\n\r\n    if (cloneCols.length === 2) {\r\n      this.setState({ delColDisplay: 'block' });\r\n    }\r\n  }\r\n\r\n  addRow = () => {\r\n    let cloneRows = this.state.rows.slice();\r\n\r\n    cloneRows.push(cloneRows[cloneRows.length - 1] + 1);\r\n    this.setState({ rows: cloneRows });\r\n\r\n    if (cloneRows.length === 2) {\r\n      this.setState({ delRowDisplay: 'block' });\r\n    }\r\n  }\r\n\r\n  delCol = () => {\r\n    let cloneCols = this.state.cols.slice();\r\n\r\n    if (cloneCols.length > 1) {\r\n      cloneCols.splice(this.state.currentCol, 1);\r\n      this.setState({ cols: cloneCols });\r\n\r\n      if (cloneCols.length === 1) {\r\n        this.setState({ delColDisplay: 'none' });\r\n      }\r\n    }\r\n\r\n    if (this.state.currentCol === cloneCols.length) {\r\n      this.setState({\r\n        currentCol: this.state.currentCol - 1,\r\n        delColTransform: `translateX(${(this.state.currentCol - 1) * this.props.cellSize + 2}px)` \r\n      })\r\n    }\r\n  }\r\n\r\n  delRow = () => {\r\n    let cloneRows = this.state.rows.slice();\r\n\r\n    if (cloneRows.length > 1) {\r\n      cloneRows.splice(this.state.currentRow, 1);\r\n      this.setState({ rows: cloneRows });\r\n    }\r\n    if (cloneRows.length === 1) {\r\n      this.setState({ delRowDisplay: 'none' });\r\n    }\r\n    \r\n    if (this.state.currentRow === cloneRows.length) {\r\n      this.setState({\r\n        currentRow: this.state.currentRow - 1,\r\n        delRowTransform: `translateY(${(this.state.currentRow - 1) * this.props.cellSize + 2}px`\r\n      })\r\n    }\r\n  }\r\n\r\n  getRef = (node) => {this.element = node}\r\n\r\n  showBtns = () => {\r\n    if (this.state.cols.length > 1) {\r\n      this.setState({ delColDisplay: 'block' });\r\n    }\r\n\r\n    if (this.state.rows.length > 1) {\r\n      this.setState({ delRowDisplay: 'block' });\r\n    }\r\n  };\r\n\r\n  hideBtns = () => {\r\n    this.setState({\r\n      delColDisplay: 'none',\r\n      delRowDisplay: 'none'\r\n    })\r\n  }\r\n\r\n  delButtonMover = (event) => {\r\n    if (event.target.classList.contains('col')) {\r\n      this.setState({ \r\n        currentCol: +event.target.dataset.colIndex,\r\n        currentRow: +event.target.parentNode.dataset.rowIndex\r\n      })\r\n    }\r\n    this.setState({\r\n      delColTransform: `translateX(${this.state.currentCol * (this.props.cellSize + 2) + 1}px)`,\r\n      delRowTransform: `translateY(${this.state.currentRow * (this.props.cellSize + 2) + 1}px)`\r\n    })\r\n  }\r\n\r\n  containerMover = (event) => {\r\n    const mousePosition = {\r\n      x: event.clientX,\r\n      y: event.clientY\r\n    }\r\n\r\n    this.setState({\r\n      leftMove: mousePosition.x + this.state.left,\r\n      topMove: mousePosition.y + this.state.top\r\n    })\r\n  }\r\n  \r\n  containerAddListener = (event) => {\r\n    const containerTableRect = event.currentTarget.getBoundingClientRect();\r\n    const eventReact = event.target.getBoundingClientRect();\r\n\r\n    this.setState({\r\n      left: containerTableRect.left - eventReact.left - event.nativeEvent.offsetX,\r\n      top: containerTableRect.top - eventReact.top - event.nativeEvent.offsetY\r\n    })\r\n    // window.addEventListener('mousemove', this.containerMover);\r\n    this.element.addEventListener('mousemove', this.containerMover);\r\n  }\r\n\r\n  containerRemoveListener = () => {\r\n    // window.removeEventListener('mousemove', this.containerMover);\r\n    this.element.removeEventListener('mousemove', this.containerMover);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div \r\n        className='container-table'\r\n        ref={this.getRef}\r\n        onMouseMove={this.delButtonMover}\r\n        onMouseEnter={this.showBtns}\r\n        onMouseLeave={this.hideBtns}\r\n        style = {{top: this.state.topMove, left: this.state.leftMove}}\r\n      >\r\n        <div \r\n          className='boxes-container'\r\n          onMouseDown={this.containerAddListener}\r\n          onMouseUp={this.containerRemoveListener}\r\n        >\r\n          {this.state.rows.map((row, index) => (\r\n            <div className='row' key={row} data-row-index={index}>{\r\n              this.state.cols.map((col, index) => (\r\n                <div className='col'\r\n                  style={{\r\n                    width: this.props.cellSize,\r\n                    height: this.props.cellSize\r\n                  }}\r\n                  key={col}\r\n                  data-col-index={index}\r\n                />\r\n              ))}</div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className='add-btns-container'>\r\n          <button className='add add-col'\r\n            onClick={this.addCol}\r\n            style={{\r\n              width: this.props.cellSize + 2,\r\n              height: this.props.cellSize + 2,\r\n              right: -(this.props.cellSize + 3)\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n          <button className='add add-row'\r\n            onClick={this.addRow}\r\n            style={{\r\n              width: this.props.cellSize + 2,\r\n              height: this.props.cellSize + 2,\r\n              bottom: -(this.props.cellSize + 3)\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n        <div className='delete-btns-container' style={{ top: -this.props.cellSize, left: -this.props.cellSize}}>\r\n          <button className='delete del-col'\r\n            onClick={this.delCol}\r\n            style={{\r\n              display: this.state.delColDisplay,\r\n              transform: this.state.delColTransform,\r\n              width: this.props.cellSize + 2,\r\n              height: this.props.cellSize + 2,\r\n              left: this.props.cellSize\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n          <button className='delete del-row'\r\n            onClick={this.delRow}\r\n            style={{\r\n              display: this.state.delRowDisplay,\r\n              transform: this.state.delRowTransform,\r\n              width: this.props.cellSize + 2,\r\n              height: this.props.cellSize + 2,\r\n              top: this.props.cellSize\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nTableComponent.defaultProps = { initialWidth: 4, initialHeight: 4, cellSize: 50 };\r\n\r\nexport default TableComponent;","import React from 'react';\nimport TableComponent from './components/tableComponent';\nimport './App.css';\n\nfunction App() {\n  return (\n    <TableComponent initialWidth={4} initialHeight={4} cellSize={50}/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}