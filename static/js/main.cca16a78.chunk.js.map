{"version":3,"sources":["components/tableComponent.js","App.js","serviceWorker.js","index.js"],"names":["TableComponent","props","addCol","cols","state","setState","length","addRow","rows","delCol","currentCol","filter","col","index","delRow","currentRow","row","showBtns","showDelBtns","hideBtns","delButtonMover","event","target","classList","contains","dataset","colIndex","parentNode","rowIndex","containerMover","containerLeftGap","containerTopGap","container","containerRef","current","mousePosition","clientX","clientY","style","left","top","containerAddListener","containerTableRect","currentTarget","getBoundingClientRect","currentBoxRect","nativeEvent","offsetX","offsetY","window","addEventListener","containerRemoveListener","removeEventListener","isCursorOverTable","React","createRef","initialHeight","initialWidth","i","push","cellSize","this","className","ref","onMouseEnter","onMouseLeave","onMouseOver","onMouseDown","onMouseUp","map","key","data-row-index","width","height","data-col-index","type","onClick","right","bottom","display","transform","Component","defaultProps","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cca16a78.chunk.js","sourcesContent":["import React from 'react';\r\nimport './tableComponent.css';\r\n\r\nclass TableComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      currentCol: 0,\r\n      currentRow: 0,\r\n      cols: [],\r\n      rows: [],\r\n      containerLeftGap: 0,\r\n      containerTopGap: 0,\r\n      isCursorOverTable: false,\r\n    };\r\n\r\n    this.containerRef = React.createRef();\r\n    const { initialHeight, initialWidth } = this.props;\r\n    const { rows, cols } = this.state;\r\n\r\n    for (let i = 0; i < initialHeight; i++) {\r\n      rows.push(i);\r\n    }\r\n    for (let i = 0; i < initialWidth; i++) {\r\n      cols.push(i);\r\n    }\r\n  }\r\n\r\n  addCol = () => {\r\n    const { cols } = this.state;\r\n\r\n    this.setState({\r\n      cols: [\r\n        ...cols,\r\n        cols[cols.length - 1] + 1,\r\n      ],\r\n    });\r\n  }\r\n\r\n  addRow = () => {\r\n    const { rows } = this.state;\r\n\r\n    this.setState({\r\n      rows: [\r\n        ...rows,\r\n        rows[rows.length - 1] + 1,\r\n      ],\r\n    });\r\n  }\r\n\r\n  delCol = () => {\r\n    const { cols, currentCol } = this.state;\r\n\r\n    if (cols.length > 1) {\r\n      this.setState({\r\n        cols: cols.filter((col, index) => {\r\n          if (index !== currentCol) {\r\n            return col;\r\n          }\r\n        }),\r\n      });\r\n    }\r\n\r\n    if (currentCol === cols.length) {\r\n      this.setState({ currentCol: currentCol - 1 });\r\n    }\r\n  }\r\n\r\n  delRow = () => {\r\n    const { rows, currentRow } = this.state;\r\n\r\n    if (rows.length > 1) {\r\n      this.setState({\r\n        rows: rows.filter((row, index) => {\r\n          if (index !== currentRow) {\r\n            return row;\r\n          }\r\n        }),\r\n      });\r\n    }\r\n\r\n    if (currentRow === rows.length) {\r\n      this.setState({ currentRow: currentRow - 1 });\r\n    }\r\n  }\r\n\r\n  showBtns = () => {\r\n    this.setState({ showDelBtns: true });\r\n  };\r\n\r\n  hideBtns = () => {\r\n    this.setState({ showDelBtns: false });\r\n  }\r\n\r\n  delButtonMover = (event) => {\r\n    const { currentCol, currentRow } = this.state;\r\n    if (event.target.classList.contains('col')) {\r\n      if (+event.target.dataset.colIndex !== currentCol) {\r\n        this.setState({ currentCol: +event.target.dataset.colIndex });\r\n      }\r\n      if (+event.target.parentNode.dataset.rowIndex !== currentRow) {\r\n        this.setState({ currentRow: +event.target.parentNode.dataset.rowIndex });\r\n      }\r\n    }\r\n  }\r\n\r\n  containerMover = (event) => {\r\n    const { containerLeftGap, containerTopGap } = this.state;\r\n    const container = this.containerRef.current;\r\n    const mousePosition = {\r\n      x: event.clientX,\r\n      y: event.clientY,\r\n    };\r\n    container.style.left = `${mousePosition.x + containerLeftGap}px`;\r\n    container.style.top = `${mousePosition.y + containerTopGap}px`;\r\n  }\r\n\r\n  containerAddListener = (event) => {\r\n    const containerTableRect = event.currentTarget.getBoundingClientRect();\r\n    const currentBoxRect = event.target.getBoundingClientRect();\r\n\r\n    this.setState({\r\n      containerLeftGap: containerTableRect.left - currentBoxRect.left - event.nativeEvent.offsetX,\r\n      containerTopGap: containerTableRect.top - currentBoxRect.top - event.nativeEvent.offsetY,\r\n    });\r\n\r\n    window.addEventListener('mousemove', this.containerMover);\r\n  }\r\n\r\n  containerRemoveListener = () => {\r\n    window.removeEventListener('mousemove', this.containerMover);\r\n  }\r\n\r\n  render() {\r\n    const { cellSize } = this.props;\r\n    const {\r\n      currentRow,\r\n      currentCol,\r\n      rows,\r\n      cols,\r\n      showDelBtns,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div\r\n        className=\"container-table\"\r\n        ref={this.containerRef}\r\n        onMouseEnter={this.showBtns}\r\n        onMouseLeave={this.hideBtns}\r\n      >\r\n        <div\r\n          className=\"boxes-container\"\r\n          onMouseOver={this.delButtonMover}\r\n          onMouseDown={this.containerAddListener}\r\n          onMouseUp={this.containerRemoveListener}\r\n        >\r\n          {\r\n            rows.map((row, index) => (\r\n              <div className=\"row\" key={row} data-row-index={index}>\r\n                {\r\n                  cols.map((col, i) => (\r\n                    <div\r\n                      className=\"col\"\r\n                      style={{\r\n                        width: cellSize,\r\n                        height: cellSize,\r\n                      }}\r\n                      key={col}\r\n                      data-col-index={i}\r\n                    />\r\n                  ))\r\n                }\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n\r\n        <div className=\"add-btns-container\">\r\n          <button\r\n            type=\"button\"\r\n            className=\"add add-col\"\r\n            onClick={this.addCol}\r\n            style={{\r\n              width: cellSize + 2,\r\n              height: cellSize + 2,\r\n              right: -(cellSize + 3),\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"add add-row\"\r\n            onClick={this.addRow}\r\n            style={{\r\n              width: cellSize + 2,\r\n              height: cellSize + 2,\r\n              bottom: -(cellSize + 3),\r\n            }}\r\n          >\r\n            +\r\n          </button>\r\n        </div>\r\n        <div className=\"delete-btns-container\" style={{ top: -cellSize, left: -cellSize }}>\r\n          <button\r\n            type=\"button\"\r\n            className=\"delete del-col\"\r\n            onClick={this.delCol}\r\n            style={{\r\n              display: (showDelBtns === true && cols.length > 1 ? 'block' : 'none'),\r\n              transform: (currentCol === cols.length\r\n                ? `translateX(${(currentCol - 1) * cellSize + 2}px)`\r\n                : `translateX(${currentCol * (cellSize + 2) + 1}px)`),\r\n              width: cellSize + 2,\r\n              height: cellSize + 2,\r\n              left: cellSize,\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"delete del-row\"\r\n            onClick={this.delRow}\r\n            style={{\r\n              display: (showDelBtns === true && rows.length > 1 ? 'block' : 'none'),\r\n              transform: (currentRow === rows.length\r\n                ? `translateY(${(currentRow - 1) * cellSize + 2}px)`\r\n                : `translateY(${currentRow * (cellSize + 2) + 1}px)`),\r\n              width: cellSize + 2,\r\n              height: cellSize + 2,\r\n              top: cellSize,\r\n            }}\r\n          >\r\n            -\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTableComponent.defaultProps = { initialWidth: 4, initialHeight: 4, cellSize: 50 };\r\n\r\nexport default TableComponent;\r\n","import React from 'react';\nimport TableComponent from './components/tableComponent';\nimport './App.css';\n\nfunction App() {\n  return (\n    <TableComponent initialWidth={4} initialHeight={4} cellSize={50} />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}